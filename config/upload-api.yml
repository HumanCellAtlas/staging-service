swagger: '2.0'
info:
  title: DCP Upload Service API
  description: Data Coordination Platform Upload Service API
  version: "0.0.2"
host: ${API_HOST}
schemes:
  - https
basePath: /
consumes:
  - application/json
  - application/octet-stream
produces:
  - application/json
securityDefinitions:
  api_key:
    description: Your API Key.  Only required for Ingestion Service API endpoints.
    type: apiKey
    name: Api-Key
    in: header

paths:
  /v1/area/{upload_area_id}:

    post:
      summary: Create an Upload Area
      operationId: upload.lambdas.api_server.v1.area.create
      description: |
        Create an Upload Area. This endpoint is idempotent and can be called for an existing upload area.
      tags:
        - For Ingestion Service Use Only
      security:
        - api_key: []
      parameters:
        - name: upload_area_id
          in: path
          description: A RFC4122-compliant ID for the upload area.
          required: true
          type: string
          pattern: "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}"
        - name: Api-Key
          in: header
          description: An authentication token provided by the service provider.
          required: true
          type: string
      responses:
        201:
          description: Upload area was created.
          schema:
            type: object
            properties:
              uri:
                type: string
                description: URI describing the location of the upload area.
            required:
              - uri
        401:
          description: Unrecognized Api-Key.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    delete:
      summary: Delete an Upload Area
      operationId: upload.lambdas.api_server.v1.area.delete
      description: Delete an Upload Area
      tags:
        - For Ingestion Service Use Only
      security:
        - api_key: []
      parameters:
        - name: upload_area_id
          in: path
          description: A RFC4122-compliant ID for the upload area.
          required: true
          type: string
        - name: Api-Key
          in: header
          description: An authentication token provided by the service provider.
          required: true
          type: string
      responses:
        204:
          description: Upload area was deleted.
        401:
          description: Unrecognized Api-Key.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Could not find an upload area with that ID.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    get:
      summary: List files in an upload area
      operationId: upload.lambdas.api_server.v1.area.list_files
      description: |
        Provide a JSON object listing all the files in an upload area, including their checkums.
      tags:
        - All
      parameters:
        - name: upload_area_id
          in: path
          description: A RFC4122-compliant ID for the upload area.
          required: true
          type: string
      responses:
        200:
          description: Here's your listing.
          schema:
            type: object
            properties:
              files:
                type: array
                items:
                  $ref: "#/definitions/FileInfo"
            required:
              - files
        404:
          description: Could not find an upload area with that ID.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /v1/area/{upload_area_id}/credentials:

    post:
      summary: Create credentials for access to this upload area
      operationId: upload.lambdas.api_server.v1.area.credentials
      description: |
        Request a set of AWS access credentials that will allow write/list access to this upload area.
      tags:
        - All
      parameters:
        - name: upload_area_id
          in: path
          description: A RFC4122-compliant ID for the upload area.
          required: true
          type: string
      responses:
        201:
          description: Credentials were created.
        423:
          description: This upload area is currently locked.  No credentials can be issued.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /v1/area/{upload_area_id}/lock:

    post:
      summary: Lock an Upload Area
      operationId: upload.lambdas.api_server.v1.area.lock
      description: |
        Lock an Upload area so that submitters may not add/delete/rename files in it.
      tags:
        - For Ingestion Service Use Only
      security:
        - api_key: []
      parameters:
        - name: upload_area_id
          in: path
          description: A RFC4122-compliant ID for the upload area.
          required: true
          type: string
        - name: Api-Key
          in: header
          description: An authentication token provided by the service provider.
          required: true
          type: string
      responses:
        204:
          description: Upload area is now locked.
        401:
          description: Unrecognized Api-Key.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    delete:
      summary: Unock an Upload Area
      operationId: upload.lambdas.api_server.v1.area.unlock
      description: |
        Unlock an Upload area so that submitters may add/delete/rename files in it.
      tags:
        - For Ingestion Service Use Only
      security:
        - api_key: []
      parameters:
        - name: upload_area_id
          in: path
          description: A RFC4122-compliant ID for the upload area.
          required: true
          type: string
        - name: Api-Key
          in: header
          description: An authentication token provided by the service provider.
          required: true
          type: string
      responses:
        204:
          description: Upload area is now unlocked.
        401:
          description: Unrecognized Api-Key.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /v1/area/{upload_area_id}/{filename}:

    put:
      summary: Store a metadata file
      operationId: upload.lambdas.api_server.v1.area.put_file
      description: Store a JSON metadata file in the upload area.
      tags:
        - For Ingestion Service Use Only
      security:
        - api_key: []
      parameters:
        - name: upload_area_id
          in: path
          description: A RFC4122-compliant ID for the upload area.
          required: true
          type: string
        - name: filename
          in: path
          description: Name of file to be placed in upload area.
          required: true
          type: string
        - name: body
          in: body
          schema:
            type: string
            format: binary
        - name: Api-Key
          in: header
          description: An authentication token provided by the service provider.
          required: true
          type: string
      responses:
        201:
          description: File was stored sucessfully.
          schema:
            $ref: "#/definitions/FileInfo"
        401:
          description: Unrecognized Api-Key.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    get:
      summary: Get information about a file
      operationId: upload.lambdas.api_server.v1.area.file_info
      tags:
        - All
      parameters:
        - name: upload_area_id
          in: path
          description: A RFC4122-compliant ID for the upload area.
          required: true
          type: string
        - name: filename
          in: path
          description: Name of file.
          required: true
          type: string
      responses:
        200:
          description: File information returned successfully.
          schema:
            $ref: "#/definitions/FileInfo"
        404:
          description: Could not find that upload area or file.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /v1/area/{upload_area_id}/{filename}/validate:

    put:
      summary: Validate a staged file
      operationId: upload.lambdas.api_server.v1.area.schedule_file_validation
      description: |
        Invoke supplied validator Docker image and give it access to the file.
        The validator must be based off the base validator Docker image.
      tags:
        - For Ingestion Service Use Only
      security:
        - api_key: []
      parameters:
        - name: Api-Key
          in: header
          description: An authentication token provided by the service provider.
          required: true
          type: string
        - name: upload_area_id
          in: path
          description: A RFC4122-compliant ID for the upload area.
          required: true
          type: string
        - name: filename
          in: path
          description: Name of file to be validated.  Must exist in the upload area.
          required: true
          type: string
        - name: json_request_body
          in: body
          required: true
          schema:
            type: object
            properties:
              validator_image:
                description: |
                  The name/location the validator Docker image.
                  To use an image on Docker Hub, specify "org-name/image-name".
                  To use an image in another online repository add a domain name e.g. "quay.io/assemblyline/ubuntu".
                  To use an image in Amazon ECR use the full registry/repository:tag naming convention,
                  for example, "aws_account_id.dkr.ecr.region.amazonaws.com/my_validator:latest".
                type: string
                # pattern: "^[A-Za-z0-9\-_:./]+$"   Does not allow escaped dashes in character classes?
              environment:
                description: Environment variables to pass to the validator.
                type: object
            required:
              - validator_image
      responses:
        200:
          description: Validation has been scheduled.
          schema:
            type: object
            properties:
              validation_id:
                type: string
                description: A reference ID for this validation, which will be used later during the callback.
        401:
          description: Unrecognized Api-Key.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    get:
      summary: Get status and results of latest validation job for a file
      operationId: upload.lambdas.api_server.v1.area.retrieve_validation_status_and_results
      description: |
        Get status and results of latest validation job for a file.
      tags:
        - For Ingestion Service Use Only
      security:
        - api_key: []
      parameters:
        - name: Api-Key
          in: header
          description: An authentication token provided by the service provider.
          required: true
          type: string
        - name: upload_area_id
          in: path
          description: A RFC4122-compliant ID for the upload area.
          required: true
          type: string
        - name: filename
          in: path
          description: Name of file.  Must exist in the upload area.
          required: true
          type: string
      responses:
        200:
          description: Validation status
          schema:
            type: object
            properties:
              validation_status:
                type: string
                description: A status for the validation event.
        401:
          description: Unrecognized Api-Key.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /v1/area/{upload_area_id}/files_info:
    put:
      summary: Get information about files
      operationId: upload.lambdas.api_server.v1.area.files_info
      description: |
        Get information about a set of files listed in the message body.
        Note that altough the HTTP verb of this endpoint is PUT, it is a read-only operation and does not modify data.
        The reason it is a PUT is that we need a payload in this request to deliver a potentially large list of files
        and per the HTTP spec GET requests cannot contain a (meaningful) body.
      tags:
        - All
      parameters:
        - name: upload_area_id
          in: path
          description: A RFC4122-compliant ID for the upload area.
          required: true
          type: string
        - name: body
          in: body
          description: A JSON array of filenames to receive information about.
          required: true
          schema:
            type: array
            items:
              description: a filename within the upload area
              type: string

      responses:
        200:
          description: File information returned successfully.
          schema:
            type: array
            items:
              $ref: "#/definitions/FileInfo"
        404:
          description: Could not find upload area or file.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


  /v1/area/{upload_area_id}/update_checksum/{checksum_id}:
    post:
      summary: Notify upload of checksummed file
      operationId: upload.lambdas.api_server.v1.area.update_checksum_event
      description: |
        Notify upload of checksummed file. DB checksum record is updated and ingest is notified.
      tags:
        - For Checksum Docker Image use only
      security:
        - api_key: []
      parameters:
        - name: upload_area_id
          in: path
          description: A RFC4122-compliant ID for the upload area.
          required: true
          type: string
        - name: checksum_id
          in: path
          description: A RFC4122-compliant ID for the checksum id.
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              status:
                description: Status of checksumming on file.
                type: string
              payload:
                description: Payload of file being checksummed.
                type: object
              job_id:
                description: aws batch job id.
                type: string
            required:
              - status
              - job_id
              - payload
      responses:
        204:
          description: Checksum db record updated and ingest notified.
        404:
          description: Could not find that upload area or checksum record.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


  /v1/area/{upload_area_id}/update_validation/{validation_id}:
    post:
      summary: Notify upload of validated file
      operationId: upload.lambdas.api_server.v1.area.update_validation_event
      description: |
        Notify upload of validated file. DB validation record is updated and ingest is notified.
      tags:
        - For Validation Docker Image use only
      security:
        - api_key: []
      parameters:
        - name: upload_area_id
          in: path
          description: A RFC4122-compliant ID for the upload area.
          required: true
          type: string
        - name: validation_id
          in: path
          description: A RFC4122-compliant ID for the validation id.
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              status:
                description: Status of validation on file.
                type: string
              payload:
                description: Payload of file being validated.
                type: object
              job_id:
                description: aws batch job id.
                type: string
            required:
              - status
              - job_id
              - payload
      responses:
        204:
          description: Checksum db record updated and ingest notified.
        404:
          description: Could not find that upload area or checksum record.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /v1/health:
    get:
      summary: Retreive health status of Upload Service
      description: |
        Returns a 200 if Upload Service is healthy.
      operationId: upload.lambdas.api_server.v1.health_check.health
      tags:
        - All
      responses:
        200:
          description: Status is nominnal.
        503:
          description: Service unavailable.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:

  Error:
    type: object
    properties:
      status:
        type: integer
        format: int32
        description: HTTP error code.
      title:
        type: string
        description: Human-readable error message.
      detail:
        type: string
        description: Exception stacktrace, if any.
    required:
      - status
      - title

  FileInfo:
    type: object
    properties:
      name:
        type: string
        description: File name.
      content_type:
        type: string
        description: MIME type.
      size:
        type: integer
        description: File size.
      last_modified:
        type: string
        description: Last modification date in ISO 8601 format
      upload_area_id:
        type: string
        description: The RFC4122-compliant ID of the upload area that contains this file.
      url:
        type: string
        description: URL of storage location of file.
      checksums:
        type: object
        properties:
          s3_etag:
            type: string
            description: S3 ETag
          sha1:
            type: string
            description: SHA1
          sha256:
            type: string
            description: SHA256
          crc32c:
            type: string
            description: CRC32C
